* dans l'extraction avec des logical : virer les NA (mettre à FALSE + warning)

* dans les algos AIREML vérifier qu'on n'a pas des NaN, et revenir un 
  pas en arrière pour switcher sur un EM si ça arrive (cf exemple Teresa)

* !!!!!!!!!!!!!!!!!!!! A FAIRE !!!!!!!!!!!!!!!!!!!!!!
  lors de la fabrication d'une bed matrix, x@snps$chr = factor(x@snps$chr, levels = unique(x@snps$chr))
  vérifier @snps$id = unique (sinon ajouter :chr:pos:alleles... )
  ordonner par chromosome / position

* bed.reorder <- fonction(x) x[ , order( x@snps$chr, x@snps$pos ) ]
  -- si la bed matrix n'est pas triée LD thin (et ld clump) feront n'importe 
  quoi. Emettre warning après toute création (cbind, extraction) ou lecture
  de matrice (voire à l'affichage ?)

* dans le code C++ des choses comme VectorXd V = MapMatrixXd( ... ) ou = Eigen::Map<Eigen::VectorXd>( ... )
  doivent appeler un constructeur par copie... à nettoyer (pas clair que ça apparaissen à des endroits critiques
  cependant)

* phenotype : codage plink 1/2, conversion auto ?!

* il faut un argument autosomes.only = TRUE dans bed.loadings sinon on calcule
  des loadings qui n'ont aucun sens !! [et probablement dans LD.thin aussi]

* as.bed.matrix : warning si x contient autre chose que des entiers

* ld clump = on n'a pas le choix des unités pour la distance...

* une fonction pour l'insertion d'un phénotype...

* dans les fonctions lmm aireml etc : normaliser le trait par défaut avant 
  l'estimation (+ QR déc covariables ?)

* mmanhattan plot : si les chr ne sont pas numériques, c'est n'importe quoi

* pi hat de plink

* dans lmm.aireml lmm.diago standardiser Y avant les analyses.

* il faudrait pouvoir inverser les allèles en fonction de leur MAF

* autosomes / chr Y / etc... possibilité de donner tout un vecteur pour les chr x et y ?

* dans vignettes !!! ne pas modifier @ped @snps pour faire de la sélection !!!

* introduire des R check user interrupt

* set.stats pourrait se dispenser de créer les colonnes mt/y/x quand ça n'est pas nécessaire

* la GRM avec autosomes.only = TRUE -> informer l'utilisateur du nombre de variants conservés
  (avec un warning) ; erreur si aucun

* set.genomic.sex devrait être capable d'utiliser une autre méthode quand il n'y a
  pas de chromosome Y

* read bed matrix devrait prévenir quand les chr ne sont pas 1 à 22 + etc
  Faire une fonction pour les options de gaston ? (tout en les laissant 
  dans options())

* dans association test : laisser la possibilité de passer un data.frame comme phéno
  avec un argument col.pheno pour choisir la colonne. Ceci peut permettre de faire
  l'appariemment sur famid / id. On pourrait aussi considérer le cas ou le pheno est
  un vecteur nommé.

* bug dans lmm.aireml pas de composante varbeta quand on donne une liste de matrice

* dans SNP.match il faudrait pouvoir faire by = "id:alleles"

* Dans snp_hash une nouvelle fonction fait le job de tester les alleles en swappant et flippant 
  -> l'utiliser pour snp_match

* de temps en temps vérifier si le workaround dans logit_model.h est tjs nécessaire

* LD.plot : accepter les nan (ou NA) qui viennent de SNPs monomorphes !

* read tped files ? (cf données elisa pour tester)

* dans qqplot.pvalues ne pas supprimer les p = 0 mais faire comme dans milor

* set.dist devrait pouvoir travailler directement sur un data frame

* exporter fonction(s) flip_strand... 

* dans les ai-reml-logit-* : on peut optimiser un peu en évitant de stocker W(n,n)
  -> utiliser un vecteur W(n) avec W.asDiagonal() ...

* regarder dans score_lmm.cpp si il y a des optimisations (diagonalisation...)

* dans m4_stats.cpp on passe trois vecteurs de Logical pour les chr... -> passer directement le numero de chr...?

NOTE  si on utilise RcppArmadillo
   il faut installer sous linux le package libomp-dev pour que ça compile
   
   
